default:
  telemetry:
    service: "@format {this.APP}"
    local: false
    log:
      level: INFO
      encoding: utf-8
      format: "%(asctime)s - %(levelname)s - %(name)s - %(message)s"
    metrics:
      service: "@format {this.APP}"
      endpoint: "/metrics"
  probes:
    host: "0.0.0.0"
    port: 8080
    log_level: info
    liveness:
      endpoint: "/livez"
    readiness:
      timeout: 5
      endpoint: "/readyz"
  # Application name
  app: pipo.dispatch
  player:
    queue:
      broker:
        host:
        vhost:
        port:
        timeout: 240
        graceful_timeout: 480     # TODO check if (mili)seconds
        max_consumers: 10
      service:
        parking_lot:
          queue: plq
          durable: true
        dead_letter:
          exchange:
            name: dlx
            durable: true
          queue:
            name: dlq
            routing_key: "dl.#"
            durable: true
            args:
              x-queue-type: quorum
              x-delivery-limit: 3
              x-dead-letter-exchange: "@format {this.PLAYER__QUEUE__SERVICE__PARKING_LOT__QUEUE}"
              message-ttl: 86400000 # 24 hour
        dispatcher:
          queue: dispatcher
          args:
            x-dead-letter-exchange: "@format {this.PLAYER__QUEUE__SERVICE__DEAD_LETTER__EXCHANGE__NAME}"
            x-dead-letter-routing-key: "dl.dispatch"
            x-queue-type: quorum
            x-delivery-limit: 3
            message-ttl: 3600000  # 1 hour
        transmuter:
          exchange: providers
          routing_key: provider
test:
  dynaconf_merge: true
  telemetry:
    local: true
    log:
      level: INFO
  channel: "test-channel"
  voice_channel: "test-vchannel"
  server_id: "TEST"
  player:
    queue:
      remote: false
      max_local_music: 100
